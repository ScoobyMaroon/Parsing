import vk_api
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
vk_session = vk_api.VkApi(token='dfc4a16561b301baf13a27364bff58168642b179ffd762f56221aa1de97960a7ade5833c3aff0513a4786')
from vk_api.longpoll import VkLongPoll, VkEventType
from parsing import create_url,link,start
from vk_api import utils
import time
longpoll = VkLongPoll(vk_session)
vk = vk_session.get_api()
magazin = {'SPAR' : VkKeyboardColor.POSITIVE, '–û–∫–µ–π' : VkKeyboardColor.POSITIVE}
energys = {'adrenaline': VkKeyboardColor.POSITIVE, 'burn': VkKeyboardColor.POSITIVE,
                                           'black monster': VkKeyboardColor.POSITIVE,
                                           'drive me': VkKeyboardColor.POSITIVE, 'gorilla': VkKeyboardColor.POSITIVE,
                                           'red-bull': VkKeyboardColor.POSITIVE,
                                           'tornado': VkKeyboardColor.POSITIVE}
def send_message(user_id,message,keyboard=None):
    post = {
        "user_id" :user_id,
        "message":message,
        "random_id":0
    }
    if keyboard != None:
        post["keyboard"] = keyboard.get_keyboard()
    else:
        post = post
    vk.method("messages.send",post)
def set_list(slovar):
    product = []
    for i in slovar:
        if slovar[i] == VkKeyboardColor.POSITIVE:
            product.append(i)
    return product
def message(event,keyboard=0,text=2):
    if keyboard == 0:
        vk.messages.send(user_id=event.user_id,message=text, random_id=0)
    else:
        vk.messages.send(user_id=event.user_id, message=text, random_id=0, keyboard=keyboard.get_keyboard())
def back_menu(text):
    keyboard = VkKeyboard(one_time=True)
    keyboard.add_button("–º–µ–Ω—é", VkKeyboardColor.PRIMARY)
    message(event, keyboard, text)
def generate_list(start='',dictionary={}):
    list = start
    for i in dictionary:
        if dictionary[i] == VkKeyboardColor.POSITIVE:
            list += f'‚úÖ{i}\n'
        if dictionary[i] == VkKeyboardColor.NEGATIVE:
            list += f'‚ùå {i}\n'
    return list
def generate_choice(dictionary):
    b = 0
    for i in dictionary:
        b += 1
        keyboard.add_button(i, dictionary[i])
        if b == 2:
            keyboard.add_line()
            b = 0
    if len(dictionary) % 2 == 0:
        pass
    else:
        keyboard.add_line()
    keyboard.add_button('–Ω–∞–∑–∞–¥', VkKeyboardColor.PRIMARY)
def set_settings(dictionary,text):
    if dictionary[text]:
        if dictionary[text] == VkKeyboardColor.POSITIVE:
            dictionary[text] = VkKeyboardColor.NEGATIVE
            print(f'[DELETE] –ò–∑ —Å–ø–∏—Å–∫–∞ —É–±—Ä–∞–Ω {text} ')
        else:
            dictionary[text] = VkKeyboardColor.POSITIVE
            print(f'[ADDED] –í —Å–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω {text} ')
    return dictionary
for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW:
        if event.from_user: #–ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ –õ–°
            user_id = event.user_id
            text = event.text.lower()
            print(f'[INFO] –ø–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {vk.users.get(user_id=user_id)[0]["first_name"]} {vk.users.get(user_id=user_id)[0]["last_name"]}')
            if text == '–º–µ–Ω—é':
                    keyboard = VkKeyboard(one_time=True)
                    keyboard.add_button("1", VkKeyboardColor.POSITIVE)
                    keyboard.add_button("2", VkKeyboardColor.PRIMARY)
                    keyboard.add_button("3", VkKeyboardColor.NEGATIVE)
                    vk.messages.send(user_id=user_id, message='–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é: \n1)–¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã \n2)—Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–µ–º—ã—Ö —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤\n3)–ø–∞—Ä—Å–µ—Ä', random_id=0, keyboard=keyboard.get_keyboard())
                    for event in longpoll.listen():
                        if event.type == VkEventType.MESSAGE_NEW:
                            text = event.text.lower()
                            user_id = event.user_id
                            print(f'[INFO] –ø–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {vk.users.get(user_id=user_id)[0]["first_name"]} {vk.users.get(user_id=user_id)[0]["last_name"]}')
                            if text == '1':
                                keyboard = VkKeyboard(one_time=True)
                                generate_choice(magazin)
                                spisok = generate_list('–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤,–≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–ª–µ–¥—É–µ—Ç –∏—Å–∫–∞—Ç—å(–∫–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–µ–¥—É–µ—Ç —É–¥–∞–ª–∏—Ç—å\–≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –¥–æ–±–∞–≤–∏—Ç—å):\n',
                                                       magazin)
                                message(event, keyboard, spisok)
                                for event in longpoll.listen():
                                    if event.type == VkEventType.MESSAGE_NEW:
                                        text = event.text
                                        user_id = event.user_id
                                        print(f'[INFO] –ø–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {vk.users.get(user_id=user_id)[0]["first_name"]} {vk.users.get(user_id=user_id)[0]["last_name"]}')
                                        if text == '–Ω–∞–∑–∞–¥':
                                            back_menu('–ù–∞–∂–º–∏—Ç–µ –º–µ–Ω—é,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—Å—è –∫ –≤—ã–±–æ—Ä—É')
                                            break
                                        try:
                                            magazin = set_settings(magazin,text)
                                            keyboard = VkKeyboard(one_time=True)
                                            generate_choice(magazin)
                                            spisok = generate_list('–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–µ–¥—É–µ—Ç –Ω–∞–π—Ç–∏:\n',magazin)
                                            message(event, keyboard, spisok)
                                        except Exception as e:
                                            pass
                            if text == '2':
                                keyboard = VkKeyboard(one_time=True)
                                generate_choice(energys)
                                spisok = generate_list('–°–ø–∏—Å–æ–∫ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–µ–¥—É–µ—Ç –Ω–∞–π—Ç–∏(–∫–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –º–∞—Ä–∫–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–µ–¥—É–µ—Ç —É–¥–∞–ª–∏—Ç—å):\n',energys)
                                message(event, keyboard, spisok)
                                for event in longpoll.listen():
                                    if event.type == VkEventType.MESSAGE_NEW:
                                        text = event.text.lower()
                                        user_id = event.user_id
                                        print(f'[INFO] –ø–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {vk.users.get(user_id=user_id)[0]["first_name"]} {vk.users.get(user_id=user_id)[0]["last_name"]}')
                                        if text == '–Ω–∞–∑–∞–¥':
                                            back_menu('–ù–∞–∂–º–∏—Ç–µ –º–µ–Ω—é,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—Å—è –∫ –≤—ã–±–æ—Ä—É')
                                            break
                                        try:
                                            energys = set_settings(energys,text)
                                            keyboard = VkKeyboard(one_time=True)
                                            generate_choice(energys)
                                            spisok = generate_list('–°–ø–∏—Å–æ–∫ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–µ–¥—É–µ—Ç –Ω–∞–π—Ç–∏:\n',energys)
                                            message(event, keyboard, spisok)
                                        except Exception as e:
                                            pass
                            if text == '3':
                                product = set_list(energys)
                                shop = set_list(magazin)
                                if len(product) > 0 and len(shop) > 0:
                                    print(f'[PARSER] PRODUCTS:{product},SHOP:{shop} staring search....')
                                    for i in shop:
                                        message(event,text=f'–î—Ä—É–∂–∏—â–µ!–ü–æ–≥–æ–¥—å –ø–æ–ª–º–∏–Ω—É—Ç–∫–∏, –ø–æ–π–º–∏, —è —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏—â—Éüòá')
                                        time.sleep(2)
                                        message(event,text=f'–ü—Ä–æ–≥—Ä—É–∑–∏–ª —Å–∞–π—Ç –º–∞–≥–∞–∑–∏–Ω–∞ {i.upper()} ü§ó')
                                        time.sleep(1)
                                        message(event, text=f'[‚úî]–ù–ê–ß–ê–õ –ò–°–ö–ê–¢–¨ –í –ú–ê–ì–ê–ó–ò–ù–ï {i.upper()} üòé')
                                        d = start(i,product)
                                        message(event, text=f'–ö–∞–∂–µ—Ç—Å—è,—è —á—Ç–æ —Ç–æ –Ω–∞—à–µ–ªüßê')
                                        time.sleep(1.5)
                                        message(event,text=f'[‚úî]–ù–ê–®–ï–õ –¶–ï–ù–´ –î–õ–Ø –ú–ê–ì–ê–ó–ò–ù–ê {i.upper()}ü•∫:')
                                        time.sleep(0.5)
                                        message(event,text=d)
                                    back_menu('–ù–∞–∂–º–∏—Ç–µ –º–µ–Ω—é,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—Å—è –∫ –≤—ã–±–æ—Ä—É')
                                    break
                                else:
                                    back_menu('–î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –º–∞–≥–∞–∑–∏–Ω –∏ –æ–¥–Ω–∞ –º–∞—Ä–∫–∞ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤')
                                    break
                            if text == '–Ω–∞–∑–∞–¥':
                                break
            else:
                keyboard = VkKeyboard(one_time=True)
                keyboard.add_button("–º–µ–Ω—é", VkKeyboardColor.PRIMARY)
                vk.messages.send(user_id=event.user_id, random_id=11, message='–Ω–∞–ø–∏—à–∏ "–º–µ–Ω—é" –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º',keyboard=keyboard.get_keyboard())
